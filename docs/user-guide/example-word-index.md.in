# Word index

This job takes an arbitrary number of plaintext objects as input and produces a
plaintext index file that lists the files and line numbers where each word
appears in the whole corpus.  This example runs on a corpus of Shakespeare's
written works.

This example uses a couple of
[assets](http://apidocs.joyent.com/manta/jobs-reference.html#assets-assets-property)
(external scripts that are used in running the job).  The first is indexone.sh,
which indexes a single object:


    #!/bin/bash
    
    #
    # indexone.sh: simple indexer for plaintext files
    #
    sed -E -e "s/[^A-Za-z']/ /g;" -e "s#([[:space:]])'+#\1#g" -e "s#^'+##g" "$1" | \
        tr '[:upper:]' '[:lower:]' | \
        awk -v OBJLABEL="$(basename ${1-stdin})" '{ \
                 for (i = 1; i <= NF; i++) { \
                     if (length($i) < 4) \
                         continue; \
                     if ($i in indx) { \
                         indx[$i] = indx[$i] "," NR \
                     } else { \
                         indx[$i] = OBJLABEL ":" NR \
                     } \
                 } \
             } \
             END { \
                 for (word in indx) { \
                     print word, indx[word] \
                 } \
             }'

The second is indexmerge.awk, which is used to merge the per-object indexes:

    {
        for (i = 2; i <= NF; i++) {
            indx[$1] = indx[$1] " " $i
        }
    }
    END {
        for (word in indx) {
            print word, indx[word]
        }
    }

